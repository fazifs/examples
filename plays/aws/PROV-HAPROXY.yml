- name: ec2 provisioning 
  hosts: localhost
  connection: local
  become: False
  tasks:
    - name: security group rule descriptions
      amazon.aws.ec2_group:
        name: "{{ name }}"
        description: sg with rule descriptions
        vpc_id: "{{ vpc_id }}"
        #profile: "{{ aws_profile }}"
        region: "{{ ec2_region }}"
        rules:
          - proto: tcp
            ports:
            - 80
            - 443
            - 8080
            
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80, 443, 8080
    

    - name: launch ec2
      amazon.aws.ec2:
        instance_type: "{{ ec2_instance_type }}"
        key_name: aws-tower
        image: "{{ ami }}"
        region: "{{ ec2_region }}"
        group: "{{ ec2_security_group }}"
        #count: "{{ ec2_instance_count }}"
        instance_tags: 
              Name: "{{ instance_tag_name }} "
              Type: "{{ instance_tag_type }}"
        exact_count: 1    
        count_tag:  
              Name: "{{ instance_tag_name }} "
              Type: "{{ instance_tag_type }}" 
        vpc_subnet_id: "{{ vpc_subnet_id }}" 
        wait: yes
        assign_public_ip: yes 
        
      register: ec2
      
    
    - name: add to host group
      add_host:
        name:  "{{ item.public_ip }}"
        groups: "{{ host_group }}"
      loop: "{{ ec2.instances }}"

    - name: wait for port 22
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
      loop: "{{ ec2.instances }}"  

- name: haproxy install 
  hosts: lb
  become: true
  tasks:
    - name: install haproxy
      yum:
        name: haproxy
        state: latest

    - name: start haproxy service
      service: 
        name:  haproxy
        state: started 


    - name: configure harproxy.cfg  
      template: 
        src: ../../templates/haproxy.cfg.j2
        dest: /etc/haproxy//haproxy.cfg

